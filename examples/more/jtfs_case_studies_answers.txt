Answers - AM cosine
-------------------

   1. fc: how's changing it affect S1D & JTFS coeffs?
          Do peaks shift across n2 or n1_fr for JTFS?

   Doubled `fc` <=> doubled `xi1` peak location. Each temporal slice of scalogram
   is a ~Gaussian (Morlet), and slice width doesn't change with `fc` - hence it's
   a simple log-frequency shift of all JTFS coefficients: no effect on `xi2` and
   `xi1_fr` peak locations.

   2. fa: how's changing it affect S1D & JTFS coeffs?
          Do peaks shift across n2 or n1_fr for JTFS?

   Doubled `fa` <=> doubled `xi2` peak location. Each frequential slice of
   scalogram is `|cos(fa*t)|`, so the second order convolves with `|cos(2*fa*t)|`
   and is maximized for the `psi2_f` wavelet with twice the center frequency.

   Along frequency, temporal slice width doesn't change with `fa`, and we don't
   move along `xi1`; instead, doubled `xi2` also doubles `sigma2`, meaning
   narrower in time (frequential slice). If the extracted amplitude were a pure
   sine, this'd have no effect, but it's not - still, the effect is minor and
   mainly upon the non-peak `n1` coeffs. Hence, in case of pure sine AM there's
   no effect on `n1_fr`, and in case of the AM being modulus of a pure sine there's
   minor nonlinear interactions affect `xi1_fr` peak locations and relative peak
   amplitudes, but not ordering (i.e. one `xi1_fr` peaking higher than other).

   3. Predict S1D for fa=0 (pure sine). What will S0, S1, and S2 look like?

   S0 ~ 0, unless `fc` is near DC. It's a pure sine, with amplitude scaled by
   the value `phi_f` takes at `fc`. S1 is constant for all frequential slices
   (i.e. along time), and ~Gaussian (Morlet) for all temporal slices.

   S2 == 0. A constant only has the DC bin, and all wavelets are zero-mean by
   definition.

   4. Predict JTFS for fa=0. What will spinned coeffs look like?

   If S2 == 0 then W2 == 0 (second-order wavelet transform, i.e. pre-modulus
   and pre-averaged time scattering). All subsequent steps hence operate on 0
   and yield 0: the spinned response of a pure sine is zero. Makes sense, as a
   pure sine's frequency doesn't change over time, by definition.
   See bottom, "Example: pure sine": https://dsp.stackexchange.com/a/78625/50076

   5. Why do answers to 3, 4 change with `analytic=False`?

   Correct AM and FM extraction requires strict analyticity. If the time-frequency
   kernels leak into negative frequencies, then they see pure sines as A.M.,
   creating non-zero second-order coefficients. This is prominent for sines near
   DC or Nyquist.

###############################################################################
Answers - Echirp
----------------

   1. How's "discrimination" work? Why does one spin resonate strongly but not
      other?

      See https://github.com/kymatio/kymatio/discussions/752#discussioncomment-1124734
      See "Separable convolutions" in https://dsp.stackexchange.com/a/78625/50076

	  So, a sloped straight line in a scalogram that's symmetric along frequency
	  (e.g. Gaussian), after 2nd-order conv in time, will produce, along
	  frequency, a strictly analytic or anti-analytic


   2. Let slc_max = highest energy spinned coef.
      Let t_max = index of highest energy slice of slc_max.
      What does unaveraged, complex `slc_max(:, t_max)` look like? i.e.
      temporal slice along frequency of the most activated spinned `(n2, n1_fr)`
      slice.

      See first linked post again. Up meets down, opposite analyticities resonate.

   3. Why's there still activations in the weaker spin? What is its biggest
      contributor?

      See first linked post again. Boundary discontinuities.

   4. Why is `pad_mode="reflect"` (along time) a bad idea for JTFS (of any x)?

      See first linked post again, and the post above it (parent). 'reflect'
      generates the opposite spin - which, if it falls under the support of
      the lowpass filter, yields cancellation.

   5. (Advanced, guess is OK) Is `E_dn / E_up = inf` possible?

      Only in idealized continuous time, else boundaries always exist.

      Windowing won't work: it tapers along time, which makes every second-order
      correlation decay at once *along frequency*, whereas we need them all to be
      cut off at the same temporal slice, so that the frequential slice that
      the spinned filter convolves with is zero. Instead we retain, for real part
      at second order, a lack of negatives to go along the positives in center
      (lack of blue surrounding red, see first post), and vice versa near edges.

      See in `wavespin/examples/more/images`:
        - `jtfs_case_studies0.png`: shown is the highest activating opposite
          spinned coefficient's second-order stage, real part - it's generated by
          the widest filters in both `n2` and `n1_fr`. That's with windowing.
        - `jtfs_case_studies1.png`: all coefficients (with non-spinned zeroed).

      To be clear, windowing certainly *helps*, just doesn't attain infinity.

###############################################################################
Additional reading
------------------

    - AM cosine: https://github.com/kymatio/kymatio/discussions/710
    - Echirp: https://github.com/kymatio/kymatio/discussions/709
